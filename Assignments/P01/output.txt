*****************************************************************************
*
*    Author:           Loic Konan
*    Email:            loickonan.lk@gmail.com
*    Label:            Recursion Blobs
*    Title:            Program 1
*    Course:           CMPS 5243,  Spring 2022, Dr. Johnson
*    Semester:         Spring 2022
*    Description:
*
*                  This program use recursion to count the number
*                  of blobs in a 2D array. A text file containing
*                  a 2D matrix of 0's and *'s is given.
*                  A blob is connected group of *'s.
*                  The *'s are connected if they are von Neumann neighbors
*                  (top, bottom, left or right)
*                  This program uses 4 fuctions:
*
*                  1 - Main: which is the driver program.
*                  2 - open_File: will prompt the user for information.
*                  3 - print_world: will print the original and mutated array.
*                  4 - recursion_blobs: will recursively replace all *
*                      of the *'s in the blob with #'s
*                  5 - header: will Display the heading and explanation of
*                      the program to the output file.
*
*    Files:
*         main.cpp
*         outfile
*         infile
*
*    Usage:
*           main.cpp          : driver program
*
*
******************************************************************************

Original world:
000*00*00000*0*0*0*0
000000*0**0*00*00000
00*0000000**0*00**00
*000000000*0**0*0*00
00****0**00**0000*00
***0000000*000000000
0*0000000000*00000**
000*000*000*00000*00
***0000000*0*00*00*0
00*0**00*00000000000
**000**0*0000*0***00
000000*0*0*000*00***
**000*00000000000*00
*0000000000000000000
00000**00*000000*000
00**0*0*000*000*0*0*
**00*0000000**0*00**
*0**00000000*00*0*00
0**0*0*00000*0*000**
0*0000000*00*000**00


Mutated world:
000#00#00000#0#0#0#0
000000#0##0#00#00000
00#0000000##0#00##00
#000000000#0##0#0#00
00####0##00##0000#00
###0000000#000000000
0#0000000000#00000##
000#000#000#00000#00
###0000000#0#00#00#0
00#0##00#00000000000
##000##0#0000#0###00
000000#0#0#000#00###
##000#00000000000#00
#0000000000000000000
00000##00#000000#000
00##0#0#000#000#0#0#
##00#0000000##0#00##
#0##00000000#00#0#00
0##0#0#00000#0#000##
0#0000000#00#000##00
Number of blobs: 56
